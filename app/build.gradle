apply plugin: 'com.android.application'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'dokka.gradle'
apply from: 'jacoco.gradle'
apply from: 'ktlint.gradle'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.chesire.malime"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 11
        versionName "1.0.2"
        testInstrumentationRunner "com.chesire.malime.MockTestRunner"
        resConfigs "en"
    }
    signingConfigs {
        release {
            if (project.hasProperty('malime_store_file')) {
                storeFile file(malime_store_file)
                storePassword malime_store_password
                keyAlias malime_key_alias
                keyPassword malime_key_password
            }
        }
    }
    buildTypes {
        release {
            resValue "string", "app_name", "@string/app_name_release"
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix = ".debug"
            versionNameSuffix '-DEBUG'
            resValue "string", "app_name", "@string/app_name_debug"
            testCoverageEnabled true
        }
    }
    dataBinding {
        enabled = true
    }
    lintOptions {
        abortOnError false // remove this later on
        disable 'ColorCasing',
                'InvalidImport',
                'InvalidSingleLineComment',
                'MissingXmlHeader',
                'NamingPattern',
                'ShouldUseStaticImport',
                'WrongAnnotationOrder',
                'XmlSpacing'
    }
}

allOpen {
    annotation('com.chesire.malime.AllOpen')
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(path: ':malime.core')
    implementation project(path: ':malime.kitsu')
    implementation project(path: ':malime.mal')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.browser:browser:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.0.0'
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.jakewharton.timber:timber:$timber_version"

    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxjava_version"

    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    implementation 'com.mikepenz:aboutlibraries:6.2.3'

    implementation 'com.vanniktech:lint-rules-android:0.9.0'
    implementation 'com.vanniktech:lint-rules-rxjava2:0.9.0'
    implementation 'nl.littlerobots.rxlint:rxlint:1.7.3'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'

    testImplementation 'androidx.room:room-testing:2.1.0-alpha04'
    testImplementation 'androidx.arch.core:core-testing:2.0.0'
    testImplementation 'org.mockito:mockito-core:2.24.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'
    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.4'
    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock-kotlin:0.8.4'
    androidTestImplementation 'com.github.tmurakami:dexopener:1.0.4'
    androidTestImplementation 'org.mockito:mockito-android:2.24.0'
    androidTestImplementation('com.schibsted.spain:barista:2.5.0') {
        exclude group: 'com.android.support'
        exclude group: 'org.jetbrains.kotlin'
    }

    kapt "com.github.bumptech.glide:compiler:$glide_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$dagger_version"
}
